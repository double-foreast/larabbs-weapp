<style lang="less">
.introduction {
  height: 3.3em;
}
.error-message {
  color: #E64340;
}
.avatar {
  width: 80px;
  height: 80px;
  display: block;
  border-radius: 50%;
}
.avatar-wrap {
  margin-top: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
}
</style>
<template>
  <view class="page">
    <view class="page__bd">
      <form bindsubmit="submit">
        <view class="avatar-wrap">
          <image class="avatar" src="{{ user.avatar }}" @tap="updateAvatar"/>
        </view>
        <view class="weui-cells__title">姓名</view>
        <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell weui-cell_input">
            <view class="weui-cell__bd">
              <input class="weui-input" placeholder="请输入姓名" name="name" value="{{ user.name }}"/>
            </view>
            <view wx:if="{{ errors.name }}" class="weui-cell__ft">
              <icon type="warn" size="23" color="#E64340"/>
            </view>
          </view>
        </view>
        <view wx:if="{{ errors.name }}" class="weui-cells__tips error-message">{{ errors.name[0] }}</view>

        <view class="weui-cells__title">邮箱</view>
        <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell weui-cell_input">
            <view class="weui-cell__bd">
              <input class="weui-input" placeholder="请输入邮箱" name="email" value="{{ user.email }}"/>
            </view>
            <view wx:if="{{ errors.email }}" class="weui-cell__ft">
              <icon type="warn" size="23" color="#E64340"/>
            </view>
          </view>
        </view>
        <view wx:if="{{ errors.email }}" class="weui-cells__tips error-message">{{ errors.email[0] }}</view>

        <view class="weui-cells__title">个人简介</view>
        <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell">
            <view class="weui-cell__bd">
              <textarea class="weui-textarea introduction" placeholder="请输入简介" name="introduction" value="{{ user.introduction }}"/>
            </view>
            <view wx:if="{{ errors.introduction }}" class="weui-cell__ft">
              <icon type="warn" size="23" color="#E64340"/>
            </view>
          </view>
        </view>
        <view wx:if="{{ errors.introduction }}" class="weui-cells__tips error-message">{{ errors.introduction[0] }}</view>

        <view class="weui-btn-area">
          <button class="weui-btn" type="primary" formType="submit">修改</button>
        </view>
      </form>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import api from '@/utils/api'

export default class UserEdit extends wepy.page {
  config = {
    navigationBarTitleText: '修改个人信息'
  }
  data = {
    avatarId: 0,
    user: null,
    errors: null
  }

  async onShow() {
    this.user = await this.$parent.getCurrentUser()
    this.$apply()
  }

  async submit(e) {
    this.errors = null
    try {
      let formData = e.detail.value
      if (this.avatarId !== 0) {
        formData.avatar_image_id = this.avatarId
      }
      let editResponse = await api.authRequest({
        url: 'user',
        method: 'PUT',
        data: formData
      })
      if (editResponse.statusCode === 422) {
        this.errors = editResponse.data.errors
        this.$apply()
      } else if (editResponse.statusCode === 200) {
        this.user = editResponse.data
        wepy.setStorageSync('user', editResponse.data)
        this.$apply()
        wepy.showToast({
          title: '修改成功',
          icon: 'success',
          duration: 2000
        })
      }
    } catch (error) {
      console.log(error)
      wepy.showModal({
        title: '提示',
        content: '联系管理员'
      })
    }
  }

  methods = {
    async updateAvatar() {
      let image = await wepy.chooseImage({count: 1})

      try {
        let avatar = image.tempFilePaths[0]
        let imageResponse = await api.updateFile({
          url: 'images',
          name: 'image',
          method: 'POST',
          formData: {type: 'avatar'},
          filePath: avatar
        })
        if (imageResponse.statusCode === 201) {
          // 小程序上传结果没有做 JSON.parse，需要手动处理
          let responseData = JSON.parse(imageResponse.data)
          this.user.avatar = responseData.path
          // 检查图片路径是否需要加域名
          this.avatarId = responseData.id
          this.$apply()
        }
      } catch (error) {
        console.log(error)
        wepy.hideLoading()
        wepy.showModal({
          title: '提示',
          content: '头像上传失败，联系管理'
        })
      }
    }
  }
}
</script>
